name: Docker
on:
  workflow_call:
    inputs:
      path:
        required: false
        type: string
        default: "."
      keep_last:
        required: false
        type: string
        default: "10"
    secrets:
      ALL_SECRETS:
        required: true
      OTHER_ENVS:
        required: false
      PERSONAL_GITHUB_TOKEN:
        required: true
    outputs:
      firstword:
        description: "The docker tag that was pushed"
        value: ${{ jobs.build.outputs.docker_tag }}

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  cache_tag: buildcache
  tag_host: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.tag_output.outputs.tag }}
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - id: repo_lower
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.repository }}

      - name: To deploy
        id: to_deploy
        uses: NearSeaTechnologies/workflows/should-deploy@1.3.0
        with:
          ALL_SECRETS: ${{ secrets.ALL_SECRETS }}
          OTHER_ENVS: ${{ secrets.OTHER_ENVS }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ${{ inputs.path }}
          # Note: tags has to be all lower-case
          tags: |
            ${{ env.tag_host }}/${{ steps.repo_lower.outputs.lowercase }}:${{ github.sha }}
            ${{ env.tag_host }}/${{ steps.repo_lower.outputs.lowercase }}:latest
          push: ${{ github.event_name != 'pull_request' && steps.to_deploy.outputs.should_deploy == 'true' }}
          cache-from: type=registry,ref=ghcr.io/${{ steps.repo_lower.outputs.lowercase }}:${{ env.cache_tag }}
          cache-to: type=registry,ref=ghcr.io/${{ steps.repo_lower.outputs.lowercase }}:${{ env.cache_tag }},mode=max

      - id: tag_output
        run: echo "::set-output name=tag::${{ env.tag_host }}/${{ steps.repo_lower.outputs.lowercase }}:${{ github.sha }}"

      - name: GHCR Prune
        uses: freefair/action-ghcr-prune@v0.4.1
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          organization: ${{ github.repository_owner }}
          container: ${{ github.event.repository.name }}
          keep-last: ${{ inputs.keep_last }}
          tag-regex-exclude: \b(?:latest|${{ env.cache_tag }})\b
          untagged: true
