name: Node lint+tests
on:
  workflow_call:
    inputs:
      node_cache:
        required: false
        type: string
        default: "npm"
      node_install:
        required: false
        type: string
        default: "npm ci"
      node_version:
        required: false
        type: string
        default: "16.13.0"
      jest_reporter:
        required: false
        type: string
        default: "jest-junit"
      jest_reporter_path:
        required: false
        type: string
        default: "./reports/junit.xml"
      run_prettier:
        required: false
        type: boolean
        default: true
      run_tests:
        required: false
        type: boolean
        default: true
      filter_files:
        required: false
        type: string
        default: |
          - 'src/**'
          - 'test/**'
          - 'package*.json'
          - '.eslintrc.js'
          - 'tsconfig*.json'
        description: |
          Run only if certain files changed. Syntax is a yaml list:
          ```
          - common/**
          - config/**
          ```
      always_run:
        description: If it should run for every push or only on Merge Requests and deployment branches
        required: false
        type: boolean
        default: false
      inject_other_envs:
        required: false
        type: boolean
        default: false
        description: Only used if always_run == false
    secrets:
      ALL_SECRETS:
        required: false
        description: Required if always_run == false
      OTHER_ENVS:
        required: false
        description: Only used if always_run == false

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.filter.outputs.node }}
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            node:
            ${{ inputs.filter_files }}

  prettier:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.node == 'true' && inputs.run_prettier == true }}
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1

      - name: To deploy
        id: to_deploy
        uses: NearSeaTechnologies/workflows/should-deploy@1.5.0
        if: ${{ !inputs.always_run }}
        with:
          inject_secrets: true
          inject_other_envs: ${{ inputs.inject_other_envs }}
          ALL_SECRETS: ${{ secrets.ALL_SECRETS }}
          OTHER_ENVS: ${{ secrets.OTHER_ENVS }}

      - name: Skip normal branches
        if: ${{ !inputs.always_run && github.event_name != 'pull_request' && steps.to_deploy.outputs.should_deploy != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node_version }}
          cache: ${{ inputs.node_cache }}
      - run: ${{ inputs.node_install }}
      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          eslint: true
          eslint_extensions: ts
          prettier: true
          prettier_extensions: ts
          auto_fix: false
          continue_on_error: false

  test:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.node == 'true' && inputs.run_tests == true }}
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1

      - name: To deploy
        id: to_deploy
        uses: NearSeaTechnologies/workflows/should-deploy@1.5.0
        if: ${{ !inputs.always_run }}
        with:
          inject_secrets: true
          inject_other_envs: ${{ inputs.inject_other_envs }}
          ALL_SECRETS: ${{ secrets.ALL_SECRETS }}
          OTHER_ENVS: ${{ secrets.OTHER_ENVS }}

      - name: Skip normal branches
        if: ${{ !inputs.always_run && github.event_name != 'pull_request' && steps.to_deploy.outputs.should_deploy != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node_version }}
          cache: ${{ inputs.node_cache }}
      - run: ${{ inputs.node_install }}
      - name: Jest Annotations & Coverage
        uses: mattallty/jest-github-action@v1.0.3
      - name: Test Reporter
        uses: dorny/test-reporter@v1.5.0
        if: success() || failure()
        with:
          name: JEST Tests
          reporter: ${{ inputs.jest_reporter }}
          path: ${{ inputs.jest_reporter_path }}
          fail-on-error: true
          list-suites: all
          list-tests: all
          max-annotations: 50
