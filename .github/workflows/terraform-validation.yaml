name: Terraform validation
on:
  workflow_call:
    inputs:
      path:
        required: false
        type: string
        default: "terraform"
      always_run:
        description: If it should run for every push or only on Merge Requests and deployment branches
        required: false
        type: boolean
        default: false
      docs_file:
        required: false
        type: string
        description: "Docs file path (from the terraform path input)"
        default: "../terraformDocs.md"
      inject_other_envs:
        required: false
        type: boolean
        default: false
        description: Only used if always_run == false
    secrets:
      ALL_SECRETS:
        required: false
        description: Required if always_run == false
      OTHER_ENVS:
        required: false
        description: Only used if always_run == false
permissions:
  contents: read
  actions: write
  pull-requests: write

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}


jobs:
  should_run:
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.filter.outputs.node }}
      to_deploy: ${{ steps.to_deploy.outputs.should_deploy }}
      should_skip: ${{ steps.should_skip.outputs.should_skip }}
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1
      - uses: dorny/paths-filter@v2.10.2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            terraform:
              - '${{ inputs.path }}/**'
      - name: To deploy
        id: to_deploy
        uses: NearSeaTechnologies/workflows/should-deploy@1.5.0
        if: ${{ !inputs.always_run }}
        with:
          inject_secrets: true
          inject_other_envs: ${{ inputs.inject_other_envs }}
          ALL_SECRETS: ${{ secrets.ALL_SECRETS }}
          OTHER_ENVS: ${{ secrets.OTHER_ENVS }}
      - id: should_skip
        shell: bash
        if: ${{ !inputs.always_run && github.event_name != 'pull_request' && steps.to_deploy.outputs.should_deploy != 'true' }}
        run: echo "should_skip=true" >> $GITHUB_OUTPUT

  validate-format:
    runs-on: ubuntu-latest
    name: Validate terraform configuration
    if: ${{ needs.should_run.outputs.terraform == 'true' && needs.should_run.outputs.should_skip != 'true' }}
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Format
        id: fmt
        run: terraform -chdir=${{ inputs.path }} fmt -check
      - name: Terraform Init
        id: init
        run: terraform -chdir=${{ inputs.path }} init -input=false -backend=false
      - name: Terraform Validate
        id: validate
        run: terraform -chdir=${{ inputs.path }} validate -no-color

      - name: Comment docs on PR
        uses: NejcZdovc/comment-pr@v1
        if: github.event_name == 'pull_request'
        with:
          identifier: validation
          message: |
            #### Terraform Format and Style üñå`${{ steps.fmt.outcome }}`
            #### Terraform Initialization ‚öôÔ∏è`${{ steps.init.outcome }}`
            #### Terraform Validation ü§ñ`${{ steps.validate.outcome }}`

            <details><summary>Validation Output</summary>

            ```
            ${{ steps.validate.outputs.stdout }}
            ```

            </details>

            *Pusher: @${{ github.actor }}, Action: `${{ github.event_name }}`, Working Directory: `${{ inputs.path }}`, Workflow: `${{ github.workflow }}`*

  docs:
    runs-on: ubuntu-latest
    if: ${{ needs.should_run.outputs.node == 'true' && inputs.run_tests == true && needs.should_run.outputs.should_skip != 'true' }}
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1

      - name: Render terraform docs inside the terraformDocs.md
        uses: terraform-docs/gh-actions@v0.11.0
        with:
          working-dir: ${{ inputs.path }}
          output-file: ${{ inputs.docs_file }}
          output-method: inject

      - name: Create TF Docs Pull Request
        id: tf_docs_pr
        uses: peter-evans/create-pull-request@v4.0.4
        if: github.event_name != 'pull_request' && github.ref_name == github.event.repository.default_branch
        with:
          delete-branch: true
          branch: chore/update-tf-docs
          labels: tfdocs
          base: ${{ github.ref_name }}
          title: Update Terraform docs
          add-paths: "${{ inputs.path }}/${{ inputs.docs_file }}"

      - name: Comment docs on PR
        uses: NejcZdovc/comment-pr@v1
        if: github.event_name == 'pull_request'
        with:
          file: "../../${{ inputs.path }}/${{ inputs.docs_file }}"
          identifier: docs