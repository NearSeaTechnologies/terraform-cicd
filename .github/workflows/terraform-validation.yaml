name: Terraform validation
on:
  workflow_call:
    inputs:
      path:
        required: false
        type: string
        default: "terraform"
      docs_file:
        required: false
        type: string
        description: "Docs file path (from the terraform path input)"
        default: "../terraformDocs.md"

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  validate-format:
    runs-on: ubuntu-latest
    name: Validate terraform configuration
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            terraform:
              - '${{ inputs.path }}/**'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        if: steps.filter.outputs.terraform == 'true'
      - name: Terraform Format
        id: fmt
        if: steps.filter.outputs.terraform == 'true'
        run: terraform -chdir=${{ inputs.path }} fmt -check
      - name: Terraform Init
        id: init
        if: steps.filter.outputs.terraform == 'true'
        run: terraform -chdir=${{ inputs.path }} init -input=false -backend=false
      - name: Terraform Validate
        id: validate
        if: steps.filter.outputs.terraform == 'true'
        run: terraform -chdir=${{ inputs.path }} validate -no-color

      - name: Comment docs on PR
        uses: NejcZdovc/comment-pr@v1
        if: steps.filter.outputs.terraform == 'true' && github.event_name == 'pull_request'
        with:
          identifier: validation
          message: |
            #### Terraform Format and Style üñå`${{ steps.fmt.outcome }}`
            #### Terraform Initialization ‚öôÔ∏è`${{ steps.init.outcome }}`
            #### Terraform Validation ü§ñ`${{ steps.validate.outcome }}`

            <details><summary>Validation Output</summary>

            ```
            ${{ steps.validate.outputs.stdout }}
            ```

            </details>

            *Pusher: @${{ github.actor }}, Action: `${{ github.event_name }}`, Working Directory: `${{ inputs.path }}`, Workflow: `${{ github.workflow }}`*

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: nschloe/action-cached-lfs-checkout@v1

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            terraform:
              - '${{ inputs.path }}/**'

      - name: Render terraform docs inside the terraformDocs.md
        uses: terraform-docs/gh-actions@v0.11.0
        if: steps.filter.outputs.terraform == 'true'
        with:
          working-dir: ${{ inputs.path }}
          output-file: ${{ inputs.docs_file }}
          output-method: inject

      - name: Create TF Docs Pull Request
        id: tf_docs_pr
        uses: peter-evans/create-pull-request@v4.0.4
        if: steps.filter.outputs.terraform == 'true' && github.event_name != 'pull_request' && github.ref_name == github.event.repository.default_branch
        with:
          delete-branch: true
          branch: chore/update-tf-docs
          labels: tfdocs
          base: ${{ github.ref_name }}
          title: Update Terraform docs
          add-paths: "${{ inputs.path }}/${{ inputs.docs_file }}"

      - name: Comment docs on PR
        uses: NejcZdovc/comment-pr@v1
        if: steps.filter.outputs.terraform == 'true' && github.event_name == 'pull_request'
        with:
          file: "../../${{ inputs.path }}/${{ inputs.docs_file }}"
          identifier: docs